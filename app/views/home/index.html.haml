:javascript
  $(function () {
    var qs = #{request.query_string.inspect};
    window.App.trackSearch = new TrackSearch({perPage: #{Track.default_per_page}})
    window.App.eventFeed = new Events({
      app:           window.App,
      currentUserID: #{current_user.id},
      filters:       _.extend({
        user:     #{current_user.id},
        follower: #{current_user.id}
      },
      $.deparam.querystring(qs)),
      updateFilters: {
        follower: #{current_user.id},
        splashes: 1,
      },
    });
    window.Scroll = new EndlessScroll({
      data: App.eventFeed,
      noMoreResults: $('<p/>').
        text(I18n.t('events.all_loaded')).
        addClass('loaded'),
      spinnerContainer: $('.loading-spinner-container'),
    });
    window.suggestedSplashers = new SuggestedSplashersView({
      collection: new SuggestedSplashers(#{
        current_user.recommended_users.to_json
      }),
      el: $('[data-widget = "suggested-users"]').get(0),
      followerID: #{current_user.id},
      splashersCount: #{User::SUGGESTED_USERS_PER_PAGE},
    }).render();
  });

.home
  = render "shared/sidebar"
  #stream-wrap.left
    #stream-feed{:data => {:widget => 'feed'}}
      .streamfeed-top
        .container
          = render "shared/feed_search"
        .feed-settings-tabs
          .avan-bold
            %ul{:data => {:widget => 'filter-following'}}
              %li.ui-tabs-selected
                %a.active{:href => "#following"}= t('events.filters.following')
              %li
                %a{:href => "#everyone"}= t('events.filters.everyone')
              %li
                %a{:href => "#mentions"}= '@' + current_user.nickname
              %li
                %a{:href => "#social"}= t('events.filters.social')
          .line
            %span
          %a.feed-updates-count.no-new.left{:data => {:widget => 'update-count'}}
          =# render "shared/feed_toggles"
      =# render "shared/feed_filter"
      %ul.live-feed{:data => {:widget => 'events'}}
      .loading-spinner-container
  .cl &nbsp;

  %script#tmpl-tutorial{:type => 'text/x-jquery-tmpl'}
    .tutorial-header
      %h1 Splash.FM
      %p.sub= t('tutorial.sub')
      .close
        %a{:href => '#'}= t('tutorial.close')
    .tutorial-content
      .tutorial-welcome
        %h2= t('tutorial.welcome.title')
        %p.sub= t('tutorial.welcome.sub')

      - t('tutorial.inner').each do |k, content|
        - bgstyle = "background: url(/images/#{k}-tutorial.png) no-repeat"

        .tutorial-inner-content-pane{:style => bgstyle}
          = simpler_format(content[:title], :tag => 'h2')
          = simpler_format(content[:body], :first_class => 'first')

    .tutorial-footer
      .tutorial-pager-absolute

  %script#tmpl-tutorial-relative-pager{:type => 'text/x-jquery-tmpl'}
    %a.tutorial-pager-prev= t('tutorial.pager.prev')
    %span.current-page
    = t('tutorial.pager.of')
    %span.total-pages
    %a.tutorial-pager-next= t('tutorial.pager.next')
